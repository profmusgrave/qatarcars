[
  {
    "objectID": "CITATION.html",
    "href": "CITATION.html",
    "title": "Citation",
    "section": "",
    "text": "Citation\nTo cite qatarcars in publications, please use:\n\nMusgrave P (2025). “Defaulting to Inclusion: Producing Sample Datasets for the Global Data Science Classroom.” Journal of Political Science Education, 1-11. doi:10.1080/15512169.2025.2572320.\n\n\nMusgrave P, Heiss A (2025). {qatarcars}: Data on Cars in Qatar. R package version 1.1.0.9000, https://profmusgrave.github.io/qatarcars/.",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Citation"
    ]
  },
  {
    "objectID": "man/qatarcars.html",
    "href": "man/qatarcars.html",
    "title": "qatarcars",
    "section": "",
    "text": "Includes prices and other specifications taken from YallaMotors Qatar between January to August 2025\n\nqatarcars\n\n\nA tibble with 105 rows and 15 variables:\n\n\norigin\n\n\na factor denoting car country of origin\n\n\nmake\n\n\na factor denoting car make\n\n\nmodel\n\n\na factor denoting car model\n\n\nlength\n\n\na number denoting car length (meters)\n\n\nwidth\n\n\na number denoting car width (meters)\n\n\nheight\n\n\na number denoting car height (meters)\n\n\nseating\n\n\na number denoting number of seats in car\n\n\ntrunk\n\n\na number denoting volume of trunk (liters)\n\n\neconomy\n\n\na number denoting car fuel economy (L/100km)\n\n\nhorsepower\n\n\na number denoting car horsepower\n\n\nprice\n\n\na number denoting car price (2025 Qatari riyals (QAR))\n\n\nmass\n\n\na number denoting car mass (kilograms)\n\n\nperformance\n\n\na number denoting car performance (Time 0-100 km/h (seconds))\n\n\ntype\n\n\na factor denoting car type\n\n\nenginetype\n\n\na factor denoting car engine type\n\n\nhttps://github.com/profmusgrave/qatarcars\nhttps://open.substack.com/pub/musgrave/p/introducing-the-qatar-cars-dataset\nYalla Motors Qatar\n\n\nlibrary(\"qatarcars\")\n\nstr(qatarcars)\n\ntibble [105 × 15] (S3: tbl_df/tbl/data.frame)\n $ origin     : Factor w/ 8 levels \"Germany\",\"Italy\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ make       : Factor w/ 31 levels \"Audi\",\"Bentley\",..: 4 4 1 1 1 22 22 22 22 22 ...\n $ model      : Factor w/ 105 levels \"2 Series Coupe\",..: 3 96 80 81 7 57 41 33 43 44 ...\n $ length     : num [1:105] 4.71 4.5 5.01 4.54 4.46 ...\n  ..- attr(*, \"label\")= chr \"Length (m)\"\n $ width      : num [1:105] 1.83 1.84 1.69 1.85 1.96 ...\n  ..- attr(*, \"label\")= chr \"Width (m)\"\n $ height     : num [1:105] 1.44 1.64 2 1.41 1.42 ...\n  ..- attr(*, \"label\")= chr \"Height (m)\"\n $ seating    : num [1:105] 5 5 5 5 5 4 5 5 5 5 ...\n  ..- attr(*, \"label\")= chr \"Number of Seats\"\n $ trunk      : num [1:105] 59 505 605 321 425 500 480 610 435 565 ...\n  ..- attr(*, \"label\")= chr \"Trunk Capacity (L)\"\n $ economy    : num [1:105] 7.6 6.6 12.1 8.7 6.5 13.3 13.1 NA 5.6 7.5 ...\n  ..- attr(*, \"label\")= chr \"Fuel Economy (L/100km)\"\n $ horsepower : num [1:105] 386 313 600 400 180 612 585 333 163 221 ...\n  ..- attr(*, \"label\")= chr \"Horsepower\"\n $ price      : num [1:105] 164257 264000 630000 310000 165000 ...\n  ..- attr(*, \"label\")= chr \"Price (QAR)\"\n $ mass       : num [1:105] 1653 1701 2490 1565 1325 ...\n  ..- attr(*, \"label\")= chr \"Mass (kg)\"\n $ performance: num [1:105] 4.3 5.4 3.6 3.8 6.7 4.1 4.3 5.6 6.8 9 ...\n  ..- attr(*, \"label\")= chr \"Time 0-100 km/h (s)\"\n $ type       : Factor w/ 4 levels \"Coupe\",\"Hatchback\",..: 4 3 3 4 4 4 3 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"Type\"\n $ enginetype : Factor w/ 3 levels \"Electric\",\"Hybrid\",..: 3 3 3 3 3 3 3 1 3 2 ...\n  ..- attr(*, \"label\")= chr \"Engine Type\"\n\nhead(qatarcars)\n\n# A tibble: 6 × 15\n  origin make  model length width height seating trunk economy horsepower  price\n  &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1 Germa… BMW   3 Se…   4.71  1.83   1.44       5    59     7.6        386 1.64e5\n2 Germa… BMW   X1      4.50  1.84   1.64       5   505     6.6        313 2.64e5\n3 Germa… Audi  RS Q8   5.01  1.69   2.00       5   605    12.1        600 6.30e5\n4 Germa… Audi  RS3     4.54  1.85   1.41       5   321     8.7        400 3.10e5\n5 Germa… Audi  A3      4.46  1.96   1.42       5   425     6.5        180 1.65e5\n6 Germa… Merc… Mayb…   5.47  1.92   1.51       4   500    13.3        612 1.28e6\n# ℹ 4 more variables: mass &lt;dbl&gt;, performance &lt;dbl&gt;, type &lt;fct&gt;,\n#   enginetype &lt;fct&gt;\n\nsummary(qatarcars)\n\n         origin         make                    model        length     \n Japan      :29   Toyota  :10   2 Series Coupe     : 1   Min.   :3.595  \n Germany    :20   Kia     : 6   3                  : 1   1st Qu.:4.495  \n PR China   :18   BMW     : 5   3 Series Sedan     : 1   Median :4.681  \n UK         :11   Mercedes: 5   720S               : 1   Mean   :4.664  \n South Korea:10   MG      : 5   8 Series Gran Coupe: 1   3rd Qu.:4.850  \n USA        : 9   Hyundai : 4   991 Carrera S      : 1   Max.   :5.469  \n (Other)    : 8   (Other) :70   (Other)            :99                  \n     width           height         seating         trunk       \n Min.   :1.595   Min.   :1.122   Min.   :2.00   Min.   :   0.0  \n 1st Qu.:1.818   1st Qu.:1.455   1st Qu.:5.00   1st Qu.: 284.0  \n Median :1.875   Median :1.540   Median :5.00   Median : 448.0  \n Mean   :1.914   Mean   :1.574   Mean   :5.01   Mean   : 437.6  \n 3rd Qu.:1.979   3rd Qu.:1.685   3rd Qu.:5.00   3rd Qu.: 542.0  \n Max.   :4.633   Max.   :1.998   Max.   :8.00   Max.   :1233.0  \n                                                                \n    economy         horsepower         price               mass     \n Min.   : 1.200   Min.   :  76.0   Min.   :   35000   Min.   : 945  \n 1st Qu.: 6.500   1st Qu.: 154.0   1st Qu.:   91000   1st Qu.:1428  \n Median : 7.600   Median : 248.0   Median :  164000   Median :1701  \n Mean   : 8.698   Mean   : 317.8   Mean   :  796573   Mean   :1776  \n 3rd Qu.:10.650   3rd Qu.: 380.0   3rd Qu.:  310000   3rd Qu.:2055  \n Max.   :22.500   Max.   :1973.0   Max.   :33000000   Max.   :2746  \n NA's   :10                                                         \n  performance            type       enginetype\n Min.   : 2.400   Coupe    :14   Electric:10  \n 1st Qu.: 4.800   Hatchback: 8   Hybrid  :14  \n Median : 6.900   SUV      :55   Petrol  :81  \n Mean   : 7.101   Sedan    :28                \n 3rd Qu.: 8.800                               \n Max.   :14.500                               \n                                              \n\ntable(qatarcars$origin)\n\n\n    Germany       Italy       Japan    PR China South Korea      Sweden \n         20           5          29          18          10           3 \n         UK         USA \n         11           9 \n\naggregate(price ~ enginetype, qatarcars, mean)\n\n  enginetype     price\n1   Electric 1044377.0\n2     Hybrid  372256.9\n3     Petrol  839318.7\n\nbarplot(table(factor(\n  qatarcars$seating,\n  levels = min(qatarcars$seating):max(qatarcars$seating)\n)))\n\n\n\n\n\n\nplot(economy ~ mass, qatarcars)\n\n\n\n\n\n\nplot(price ~ performance, qatarcars, log = \"y\")\n\n\n\n\n\n\nif (require(\"dplyr\")) {\n  glimpse(qatarcars)\n}\n\nRows: 105\nColumns: 15\n$ origin      &lt;fct&gt; Germany, Germany, Germany, Germany, Germany, Germany, Germ…\n$ make        &lt;fct&gt; BMW, BMW, Audi, Audi, Audi, Mercedes, Mercedes, Mercedes, …\n$ model       &lt;fct&gt; 3 Series Sedan, X1, RS Q8, RS3, A3, Maybach, G-Wagon, EQS,…\n$ length      &lt;dbl&gt; 4.713, 4.505, 5.012, 4.542, 4.456, 5.469, 4.613, 5.216, 4.…\n$ width       &lt;dbl&gt; 1.827, 1.845, 1.694, 1.851, 1.960, 1.921, 1.984, 1.926, 1.…\n$ height      &lt;dbl&gt; 1.440, 1.642, 1.998, 1.412, 1.416, 1.510, 1.969, 1.512, 1.…\n$ seating     &lt;dbl&gt; 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 2, 2, 5…\n$ trunk       &lt;dbl&gt; 59, 505, 605, 321, 425, 500, 480, 610, 435, 565, 132, 627,…\n$ economy     &lt;dbl&gt; 7.6, 6.6, 12.1, 8.7, 6.5, 13.3, 13.1, NA, 5.6, 7.5, 11.2, …\n$ horsepower  &lt;dbl&gt; 386, 313, 600, 400, 180, 612, 585, 333, 163, 221, 473, 453…\n$ price       &lt;dbl&gt; 164257, 264000, 630000, 310000, 165000, 1281000, 1011500, …\n$ mass        &lt;dbl&gt; 1653, 1701, 2490, 1565, 1325, 2376, 2588, 2495, 1565, 1656…\n$ performance &lt;dbl&gt; 4.3, 5.4, 3.6, 3.8, 6.7, 4.1, 4.3, 5.6, 6.8, 9.0, 3.3, 4.4…\n$ type        &lt;fct&gt; Sedan, SUV, SUV, Sedan, Sedan, Sedan, SUV, SUV, SUV, SUV, …\n$ enginetype  &lt;fct&gt; Petrol, Petrol, Petrol, Petrol, Petrol, Petrol, Petrol, El…\n\nif (require(\"dplyr\")) {\n  qatarcars |&gt; \n    count(origin)\n}\n\n# A tibble: 8 × 2\n  origin          n\n  &lt;fct&gt;       &lt;int&gt;\n1 Germany        20\n2 Italy           5\n3 Japan          29\n4 PR China       18\n5 South Korea    10\n6 Sweden          3\n7 UK             11\n8 USA             9\n\nif (require(\"dplyr\")) {\n  qatarcars |&gt; \n    group_by(enginetype) |&gt; \n    summarize(avg_price = mean(price))\n}\n\n# A tibble: 3 × 2\n  enginetype avg_price\n  &lt;fct&gt;          &lt;dbl&gt;\n1 Electric    1044377 \n2 Hybrid       372257.\n3 Petrol       839319.\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = seating)) + \n    geom_bar()\n}\n\n\n\n\n\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = mass, y = economy)) + \n    geom_point()\n}\n\n\n\n\n\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = performance, y = price)) +\n    geom_point() + \n    scale_y_log10()\n}",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Reference",
      "qatarcars"
    ]
  },
  {
    "objectID": "man/qatarcars.html#fuel-economy-size-performance-and-price-data-for-cars-in-qatar",
    "href": "man/qatarcars.html#fuel-economy-size-performance-and-price-data-for-cars-in-qatar",
    "title": "qatarcars",
    "section": "",
    "text": "Includes prices and other specifications taken from YallaMotors Qatar between January to August 2025\n\nqatarcars\n\n\nA tibble with 105 rows and 15 variables:\n\n\norigin\n\n\na factor denoting car country of origin\n\n\nmake\n\n\na factor denoting car make\n\n\nmodel\n\n\na factor denoting car model\n\n\nlength\n\n\na number denoting car length (meters)\n\n\nwidth\n\n\na number denoting car width (meters)\n\n\nheight\n\n\na number denoting car height (meters)\n\n\nseating\n\n\na number denoting number of seats in car\n\n\ntrunk\n\n\na number denoting volume of trunk (liters)\n\n\neconomy\n\n\na number denoting car fuel economy (L/100km)\n\n\nhorsepower\n\n\na number denoting car horsepower\n\n\nprice\n\n\na number denoting car price (2025 Qatari riyals (QAR))\n\n\nmass\n\n\na number denoting car mass (kilograms)\n\n\nperformance\n\n\na number denoting car performance (Time 0-100 km/h (seconds))\n\n\ntype\n\n\na factor denoting car type\n\n\nenginetype\n\n\na factor denoting car engine type\n\n\nhttps://github.com/profmusgrave/qatarcars\nhttps://open.substack.com/pub/musgrave/p/introducing-the-qatar-cars-dataset\nYalla Motors Qatar\n\n\nlibrary(\"qatarcars\")\n\nstr(qatarcars)\n\ntibble [105 × 15] (S3: tbl_df/tbl/data.frame)\n $ origin     : Factor w/ 8 levels \"Germany\",\"Italy\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ make       : Factor w/ 31 levels \"Audi\",\"Bentley\",..: 4 4 1 1 1 22 22 22 22 22 ...\n $ model      : Factor w/ 105 levels \"2 Series Coupe\",..: 3 96 80 81 7 57 41 33 43 44 ...\n $ length     : num [1:105] 4.71 4.5 5.01 4.54 4.46 ...\n  ..- attr(*, \"label\")= chr \"Length (m)\"\n $ width      : num [1:105] 1.83 1.84 1.69 1.85 1.96 ...\n  ..- attr(*, \"label\")= chr \"Width (m)\"\n $ height     : num [1:105] 1.44 1.64 2 1.41 1.42 ...\n  ..- attr(*, \"label\")= chr \"Height (m)\"\n $ seating    : num [1:105] 5 5 5 5 5 4 5 5 5 5 ...\n  ..- attr(*, \"label\")= chr \"Number of Seats\"\n $ trunk      : num [1:105] 59 505 605 321 425 500 480 610 435 565 ...\n  ..- attr(*, \"label\")= chr \"Trunk Capacity (L)\"\n $ economy    : num [1:105] 7.6 6.6 12.1 8.7 6.5 13.3 13.1 NA 5.6 7.5 ...\n  ..- attr(*, \"label\")= chr \"Fuel Economy (L/100km)\"\n $ horsepower : num [1:105] 386 313 600 400 180 612 585 333 163 221 ...\n  ..- attr(*, \"label\")= chr \"Horsepower\"\n $ price      : num [1:105] 164257 264000 630000 310000 165000 ...\n  ..- attr(*, \"label\")= chr \"Price (QAR)\"\n $ mass       : num [1:105] 1653 1701 2490 1565 1325 ...\n  ..- attr(*, \"label\")= chr \"Mass (kg)\"\n $ performance: num [1:105] 4.3 5.4 3.6 3.8 6.7 4.1 4.3 5.6 6.8 9 ...\n  ..- attr(*, \"label\")= chr \"Time 0-100 km/h (s)\"\n $ type       : Factor w/ 4 levels \"Coupe\",\"Hatchback\",..: 4 3 3 4 4 4 3 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"Type\"\n $ enginetype : Factor w/ 3 levels \"Electric\",\"Hybrid\",..: 3 3 3 3 3 3 3 1 3 2 ...\n  ..- attr(*, \"label\")= chr \"Engine Type\"\n\nhead(qatarcars)\n\n# A tibble: 6 × 15\n  origin make  model length width height seating trunk economy horsepower  price\n  &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1 Germa… BMW   3 Se…   4.71  1.83   1.44       5    59     7.6        386 1.64e5\n2 Germa… BMW   X1      4.50  1.84   1.64       5   505     6.6        313 2.64e5\n3 Germa… Audi  RS Q8   5.01  1.69   2.00       5   605    12.1        600 6.30e5\n4 Germa… Audi  RS3     4.54  1.85   1.41       5   321     8.7        400 3.10e5\n5 Germa… Audi  A3      4.46  1.96   1.42       5   425     6.5        180 1.65e5\n6 Germa… Merc… Mayb…   5.47  1.92   1.51       4   500    13.3        612 1.28e6\n# ℹ 4 more variables: mass &lt;dbl&gt;, performance &lt;dbl&gt;, type &lt;fct&gt;,\n#   enginetype &lt;fct&gt;\n\nsummary(qatarcars)\n\n         origin         make                    model        length     \n Japan      :29   Toyota  :10   2 Series Coupe     : 1   Min.   :3.595  \n Germany    :20   Kia     : 6   3                  : 1   1st Qu.:4.495  \n PR China   :18   BMW     : 5   3 Series Sedan     : 1   Median :4.681  \n UK         :11   Mercedes: 5   720S               : 1   Mean   :4.664  \n South Korea:10   MG      : 5   8 Series Gran Coupe: 1   3rd Qu.:4.850  \n USA        : 9   Hyundai : 4   991 Carrera S      : 1   Max.   :5.469  \n (Other)    : 8   (Other) :70   (Other)            :99                  \n     width           height         seating         trunk       \n Min.   :1.595   Min.   :1.122   Min.   :2.00   Min.   :   0.0  \n 1st Qu.:1.818   1st Qu.:1.455   1st Qu.:5.00   1st Qu.: 284.0  \n Median :1.875   Median :1.540   Median :5.00   Median : 448.0  \n Mean   :1.914   Mean   :1.574   Mean   :5.01   Mean   : 437.6  \n 3rd Qu.:1.979   3rd Qu.:1.685   3rd Qu.:5.00   3rd Qu.: 542.0  \n Max.   :4.633   Max.   :1.998   Max.   :8.00   Max.   :1233.0  \n                                                                \n    economy         horsepower         price               mass     \n Min.   : 1.200   Min.   :  76.0   Min.   :   35000   Min.   : 945  \n 1st Qu.: 6.500   1st Qu.: 154.0   1st Qu.:   91000   1st Qu.:1428  \n Median : 7.600   Median : 248.0   Median :  164000   Median :1701  \n Mean   : 8.698   Mean   : 317.8   Mean   :  796573   Mean   :1776  \n 3rd Qu.:10.650   3rd Qu.: 380.0   3rd Qu.:  310000   3rd Qu.:2055  \n Max.   :22.500   Max.   :1973.0   Max.   :33000000   Max.   :2746  \n NA's   :10                                                         \n  performance            type       enginetype\n Min.   : 2.400   Coupe    :14   Electric:10  \n 1st Qu.: 4.800   Hatchback: 8   Hybrid  :14  \n Median : 6.900   SUV      :55   Petrol  :81  \n Mean   : 7.101   Sedan    :28                \n 3rd Qu.: 8.800                               \n Max.   :14.500                               \n                                              \n\ntable(qatarcars$origin)\n\n\n    Germany       Italy       Japan    PR China South Korea      Sweden \n         20           5          29          18          10           3 \n         UK         USA \n         11           9 \n\naggregate(price ~ enginetype, qatarcars, mean)\n\n  enginetype     price\n1   Electric 1044377.0\n2     Hybrid  372256.9\n3     Petrol  839318.7\n\nbarplot(table(factor(\n  qatarcars$seating,\n  levels = min(qatarcars$seating):max(qatarcars$seating)\n)))\n\n\n\n\n\n\nplot(economy ~ mass, qatarcars)\n\n\n\n\n\n\nplot(price ~ performance, qatarcars, log = \"y\")\n\n\n\n\n\n\nif (require(\"dplyr\")) {\n  glimpse(qatarcars)\n}\n\nRows: 105\nColumns: 15\n$ origin      &lt;fct&gt; Germany, Germany, Germany, Germany, Germany, Germany, Germ…\n$ make        &lt;fct&gt; BMW, BMW, Audi, Audi, Audi, Mercedes, Mercedes, Mercedes, …\n$ model       &lt;fct&gt; 3 Series Sedan, X1, RS Q8, RS3, A3, Maybach, G-Wagon, EQS,…\n$ length      &lt;dbl&gt; 4.713, 4.505, 5.012, 4.542, 4.456, 5.469, 4.613, 5.216, 4.…\n$ width       &lt;dbl&gt; 1.827, 1.845, 1.694, 1.851, 1.960, 1.921, 1.984, 1.926, 1.…\n$ height      &lt;dbl&gt; 1.440, 1.642, 1.998, 1.412, 1.416, 1.510, 1.969, 1.512, 1.…\n$ seating     &lt;dbl&gt; 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 2, 2, 5…\n$ trunk       &lt;dbl&gt; 59, 505, 605, 321, 425, 500, 480, 610, 435, 565, 132, 627,…\n$ economy     &lt;dbl&gt; 7.6, 6.6, 12.1, 8.7, 6.5, 13.3, 13.1, NA, 5.6, 7.5, 11.2, …\n$ horsepower  &lt;dbl&gt; 386, 313, 600, 400, 180, 612, 585, 333, 163, 221, 473, 453…\n$ price       &lt;dbl&gt; 164257, 264000, 630000, 310000, 165000, 1281000, 1011500, …\n$ mass        &lt;dbl&gt; 1653, 1701, 2490, 1565, 1325, 2376, 2588, 2495, 1565, 1656…\n$ performance &lt;dbl&gt; 4.3, 5.4, 3.6, 3.8, 6.7, 4.1, 4.3, 5.6, 6.8, 9.0, 3.3, 4.4…\n$ type        &lt;fct&gt; Sedan, SUV, SUV, Sedan, Sedan, Sedan, SUV, SUV, SUV, SUV, …\n$ enginetype  &lt;fct&gt; Petrol, Petrol, Petrol, Petrol, Petrol, Petrol, Petrol, El…\n\nif (require(\"dplyr\")) {\n  qatarcars |&gt; \n    count(origin)\n}\n\n# A tibble: 8 × 2\n  origin          n\n  &lt;fct&gt;       &lt;int&gt;\n1 Germany        20\n2 Italy           5\n3 Japan          29\n4 PR China       18\n5 South Korea    10\n6 Sweden          3\n7 UK             11\n8 USA             9\n\nif (require(\"dplyr\")) {\n  qatarcars |&gt; \n    group_by(enginetype) |&gt; \n    summarize(avg_price = mean(price))\n}\n\n# A tibble: 3 × 2\n  enginetype avg_price\n  &lt;fct&gt;          &lt;dbl&gt;\n1 Electric    1044377 \n2 Hybrid       372257.\n3 Petrol       839319.\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = seating)) + \n    geom_bar()\n}\n\n\n\n\n\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = mass, y = economy)) + \n    geom_point()\n}\n\n\n\n\n\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = performance, y = price)) +\n    geom_point() + \n    scale_y_log10()\n}",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Reference",
      "qatarcars"
    ]
  },
  {
    "objectID": "NEWS.html",
    "href": "NEWS.html",
    "title": "qatarcars (development version)",
    "section": "",
    "text": "qatarcars (development version)\n\nMade some minor corrections to the data based on reviewer feedback (dropped one BMW, reclassified eight cars, and added six new cars)\nUpdated canonical URL to original .dta file to https://qatarcars.georgetown.domains/qatarcars.dta\nAdded reference/citation information to DESCRIPTION and inst/CITATION\nFix badges in README\nAdded functions for converting from QAR to USD and EUR:\n\nFrom QAR: qar_to_usd() and qar_to_eur()\nFrom USD: usd_to_qar() and usd_to_eur()\nFrom EUR: eur_to_qar() and eur_to_usd()\n\nAdded documentation to the README on converting between SI and US customary units\nAdded Qatari maroon color as qatar_maroon\n\n\n\nqatarcars 1.0.0\n\nInitial CRAN submission.",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "News"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html",
    "href": "vignettes/unit-conversions.html",
    "title": "Converting to US customary units",
    "section": "",
    "text": "Conversions between SI (International System) units (i.e. meters, grams, liters) and US customary units (i.e. feet, pounds, gallons) are not included as functions in this package. This is a deliberate pedagogical choice. The data is designed to be universally inclusive with SI units used by the majority of the world. Users who work with US customary units should convert them on their own.\nThis guide provides examples for making these different conversions, since not all of the variables involve straightforward multiplication.\nlibrary(dplyr)\nlibrary(qatarcars)",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html#distance-meters-feet",
    "href": "vignettes/unit-conversions.html#distance-meters-feet",
    "title": "Converting to US customary units",
    "section": "Distance (meters ↔︎ feet)",
    "text": "Distance (meters ↔︎ feet)\nConversion factors\n\n1 foot = 0.3048 meters\n1 meter = 3.28084 feet\n\nDerivation\nA foot is officially defined as 0.3048 meters, so 1 meter = \\(\\frac{1}{0.3048}\\) = 3.28084 feet.\nExample\n\nqatarcars |&gt;\n  mutate(\n    length_ft = length / 0.3048,\n    width_ft = width / 0.3048,\n    height_ft = height / 0.3048\n  ) |&gt;\n  select(make, model, length, length_ft, width, width_ft, height, height_ft)\n#&gt; # A tibble: 105 × 8\n#&gt;    make     model          length length_ft width width_ft height height_ft\n#&gt;    &lt;fct&gt;    &lt;fct&gt;           &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n#&gt;  1 BMW      3 Series Sedan   4.71      15.5  1.83     5.99   1.44      4.72\n#&gt;  2 BMW      X1               4.50      14.8  1.84     6.05   1.64      5.39\n#&gt;  3 Audi     RS Q8            5.01      16.4  1.69     5.56   2.00      6.56\n#&gt;  4 Audi     RS3              4.54      14.9  1.85     6.07   1.41      4.63\n#&gt;  5 Audi     A3               4.46      14.6  1.96     6.43   1.42      4.65\n#&gt;  6 Mercedes Maybach          5.47      17.9  1.92     6.30   1.51      4.95\n#&gt;  7 Mercedes G-Wagon          4.61      15.1  1.98     6.51   1.97      6.46\n#&gt;  8 Mercedes EQS              5.22      17.1  1.93     6.32   1.51      4.96\n#&gt;  9 Mercedes GLA              4.41      14.5  1.83     6.02   1.61      5.29\n#&gt; 10 Mercedes GLB 200          4.63      15.2  4.63    15.2    1.66      5.44\n#&gt; # ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html#mass-kilograms-pounds",
    "href": "vignettes/unit-conversions.html#mass-kilograms-pounds",
    "title": "Converting to US customary units",
    "section": "Mass (kilograms ↔︎ pounds)",
    "text": "Mass (kilograms ↔︎ pounds)\nConversion factors\n\n1 pound = 0.45359237 kilograms\n1 kilogram = 2.204623 pounds\n\nDerivation\nA pound is officially defined as 0.45359237 kilograms, so 1 kilogram = \\(\\frac{1}{0.45359237}\\) = 2.204623 pounds.\nExample\n\nqatarcars |&gt;\n  mutate(mass_lbs = mass / 0.45359237) |&gt;\n  select(make, model, mass, mass_lbs)\n#&gt; # A tibble: 105 × 4\n#&gt;    make     model           mass mass_lbs\n#&gt;    &lt;fct&gt;    &lt;fct&gt;          &lt;dbl&gt;    &lt;dbl&gt;\n#&gt;  1 BMW      3 Series Sedan  1653    3644.\n#&gt;  2 BMW      X1              1701    3750.\n#&gt;  3 Audi     RS Q8           2490    5490.\n#&gt;  4 Audi     RS3             1565    3450.\n#&gt;  5 Audi     A3              1325    2921.\n#&gt;  6 Mercedes Maybach         2376    5238.\n#&gt;  7 Mercedes G-Wagon         2588    5706.\n#&gt;  8 Mercedes EQS             2495    5501.\n#&gt;  9 Mercedes GLA             1565    3450.\n#&gt; 10 Mercedes GLB 200         1656    3651.\n#&gt; # ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html#volume-liters-cubic-feet",
    "href": "vignettes/unit-conversions.html#volume-liters-cubic-feet",
    "title": "Converting to US customary units",
    "section": "Volume (liters ↔︎ cubic feet)",
    "text": "Volume (liters ↔︎ cubic feet)\nConversion factors\n\n1 liter = 0.03531467 cubic feet\n1 cubic foot = 28.31684 liters\n\nDerivation\n1 liter = 0.001 cubic meters, so 1 liter = \\(0.001 \\times \\left(\\frac{1}{0.3048}\\right)^3\\) = 0.03531467 cubic feet. In reverse, 1 cubic foot = \\(\\frac{1}{0.03531467}\\) = 28.31684 liters.\nExample\n\nqatarcars |&gt;\n  mutate(trunk_cuft = trunk * 0.001 * (1 / 0.3048)^3) |&gt;\n  select(make, model, trunk, trunk_cuft)\n#&gt; # A tibble: 105 × 4\n#&gt;    make     model          trunk trunk_cuft\n#&gt;    &lt;fct&gt;    &lt;fct&gt;          &lt;dbl&gt;      &lt;dbl&gt;\n#&gt;  1 BMW      3 Series Sedan    59       2.08\n#&gt;  2 BMW      X1               505      17.8 \n#&gt;  3 Audi     RS Q8            605      21.4 \n#&gt;  4 Audi     RS3              321      11.3 \n#&gt;  5 Audi     A3               425      15.0 \n#&gt;  6 Mercedes Maybach          500      17.7 \n#&gt;  7 Mercedes G-Wagon          480      17.0 \n#&gt;  8 Mercedes EQS              610      21.5 \n#&gt;  9 Mercedes GLA              435      15.4 \n#&gt; 10 Mercedes GLB 200          565      20.0 \n#&gt; # ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html#fuel-economy-l100km-mpg",
    "href": "vignettes/unit-conversions.html#fuel-economy-l100km-mpg",
    "title": "Converting to US customary units",
    "section": "Fuel economy (L/100km ↔︎ MPG)",
    "text": "Fuel economy (L/100km ↔︎ MPG)\nConversion factors\n\n1 L/100km ≈ 235.215 / MPG\n1 MPG ≈ 235.215 / L/100km\n\n\n\n\n\n\n\nNote\n\n\n\nThese two units are inverted and can be counterintuitive! Higher MPG = lower L/100km.\nIn SI units, low economy values are good; in US customary units, high economy values are good. For instance, a car with 8 L/100km (≈29 MPG) is more efficient than one with 12 L/100km (≈20 MPG).\n\n\nDerivation\nA US gallon is officially defined as 3.785411784 liters, and 1 mile = \\(\\frac{0.3048 \\times 5280}{1000}\\) = 1.609344 kilometers.\n\\[\n\\begin{aligned}\n\\text{L/100km} &\\rightarrow \\text{MPG} \\\\\n&= \\frac{100 \\text{ km}}{\\text{L/100km}} \\times \\frac{1 \\text{ mile}}{1.609 \\text{ km}} \\times \\frac{3.785 \\text{ L}}{1 \\text{ gallon}}\\\\\n&= \\frac{100 \\times 3.785}{1.609 \\times \\text{L/100km}} \\times \\frac{\\text{ miles}}{\\text{ gallon}} \\\\\n&\\approx \\frac{235.215}{\\text{L/100km}} \\text{ MPG}\n\\end{aligned}\n\\]\nExample\n\neconomy_conversion_factor &lt;- 100 *\n  3.785411784 / # liters in a gallon\n  (0.3048 * 5280 / 1000) # kilometers in a mile\neconomy_conversion_factor\n#&gt; [1] 235.2146\n\nqatarcars |&gt;\n  mutate(economy_mpg = economy_conversion_factor / economy) |&gt;\n  select(make, model, economy, economy_mpg)\n#&gt; # A tibble: 105 × 4\n#&gt;    make     model          economy economy_mpg\n#&gt;    &lt;fct&gt;    &lt;fct&gt;            &lt;dbl&gt;       &lt;dbl&gt;\n#&gt;  1 BMW      3 Series Sedan     7.6        30.9\n#&gt;  2 BMW      X1                 6.6        35.6\n#&gt;  3 Audi     RS Q8             12.1        19.4\n#&gt;  4 Audi     RS3                8.7        27.0\n#&gt;  5 Audi     A3                 6.5        36.2\n#&gt;  6 Mercedes Maybach           13.3        17.7\n#&gt;  7 Mercedes G-Wagon           13.1        18.0\n#&gt;  8 Mercedes EQS               NA          NA  \n#&gt;  9 Mercedes GLA                5.6        42.0\n#&gt; 10 Mercedes GLB 200            7.5        31.4\n#&gt; # ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html#performance-0100-kmh-060-mph",
    "href": "vignettes/unit-conversions.html#performance-0100-kmh-060-mph",
    "title": "Converting to US customary units",
    "section": "Performance (0–100 km/h ↔︎ 0–60 mph)",
    "text": "Performance (0–100 km/h ↔︎ 0–60 mph)\nConversion factors\n\n0–60 mph (s) ≈ 0–100 km/h (s) × 0.9656064\n0–100 km/h (s) ≈ 0–60 mph (s) / 0.9656064\n\n\n\n\n\n\n\nNote\n\n\n\nThis conversion is only approximate because 100 km/h corresponds to about 62 mph, not exactly 60 mph, and cars may not accelerate at a constant rate. The estimate assumes constant acceleration (time proportional to target speed). Since 60 mph is reached before 100 km/h, the actual 0–60 time would be slightly faster than the scaled estimate.\n\n\nDerivation\n60 mph = \\(\\frac{0.3048 \\times 5280 \\times 60}{1000}\\) = 96.56064 km/h, so 60 mph is ≈96.56% of 100 km/h. Assuming constant acceleration, time scales proportionally to target speed, giving the conversion factor of 0.9656064.\nExample\n\nperformance_conversion_factor &lt;- 0.3048 * 5280 * 60 / 1000 / 100\n\nqatarcars |&gt;\n  mutate(performance_mph = performance * performance_conversion_factor) |&gt;\n  select(make, model, performance, performance_mph)\n#&gt; # A tibble: 105 × 4\n#&gt;    make     model          performance performance_mph\n#&gt;    &lt;fct&gt;    &lt;fct&gt;                &lt;dbl&gt;           &lt;dbl&gt;\n#&gt;  1 BMW      3 Series Sedan         4.3            4.15\n#&gt;  2 BMW      X1                     5.4            5.21\n#&gt;  3 Audi     RS Q8                  3.6            3.48\n#&gt;  4 Audi     RS3                    3.8            3.67\n#&gt;  5 Audi     A3                     6.7            6.47\n#&gt;  6 Mercedes Maybach                4.1            3.96\n#&gt;  7 Mercedes G-Wagon                4.3            4.15\n#&gt;  8 Mercedes EQS                    5.6            5.41\n#&gt;  9 Mercedes GLA                    6.8            6.57\n#&gt; 10 Mercedes GLB 200                9              8.69\n#&gt; # ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "vignettes/unit-conversions.html#automatic-conversion-with-units",
    "href": "vignettes/unit-conversions.html#automatic-conversion-with-units",
    "title": "Converting to US customary units",
    "section": "Automatic conversion with {units}",
    "text": "Automatic conversion with {units}\nAlternatively, you can use the {units} package to make these conversions:\n\nlibrary(units)\n\nqatarcars |&gt;\n  mutate(\n    length_ft = set_units(length, \"m\") |&gt; set_units(\"ft\"),\n    mass_lbs = set_units(mass, \"kg\") |&gt; set_units(\"lb\"),\n    trunk_cuft = set_units(trunk, \"L\") |&gt; set_units(\"ft^3\"),\n    economy_mpg = set_units(1 / (economy / 100), \"km/L\") |&gt; set_units(\"mi/gallon\")\n  ) |&gt;\n  select(make, model, length_ft, mass_lbs, trunk_cuft, economy_mpg)\n#&gt; # A tibble: 105 × 6\n#&gt;    make     model          length_ft mass_lbs trunk_cuft economy_mpg\n#&gt;    &lt;fct&gt;    &lt;fct&gt;               [ft]     [lb]     [ft^3] [mi/gallon]\n#&gt;  1 BMW      3 Series Sedan      15.5    3644.       2.08        30.9\n#&gt;  2 BMW      X1                  14.8    3750.      17.8         35.6\n#&gt;  3 Audi     RS Q8               16.4    5490.      21.4         19.4\n#&gt;  4 Audi     RS3                 14.9    3450.      11.3         27.0\n#&gt;  5 Audi     A3                  14.6    2921.      15.0         36.2\n#&gt;  6 Mercedes Maybach             17.9    5238.      17.7         17.7\n#&gt;  7 Mercedes G-Wagon             15.1    5706.      17.0         18.0\n#&gt;  8 Mercedes EQS                 17.1    5501.      21.5         NA  \n#&gt;  9 Mercedes GLA                 14.5    3450.      15.4         42.0\n#&gt; 10 Mercedes GLB 200             15.2    3651.      20.0         31.4\n#&gt; # ℹ 95 more rows\n\n\n\n\n\n\n\nTip\n\n\n\n{units} stores unit-specific metadata in the converted columns. Use drop_units() to convert these columns back to numeric values:\nqatarcars |&gt;\n  mutate(\n    length_ft = set_units(length, \"m\") |&gt; set_units(\"ft\") |&gt; drop_units()\n  )",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Converting to US customary units"
    ]
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "qatarcars",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public: \nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org.",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Licence"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "qatarcars",
    "section": "Overview",
    "text": "Overview\nQatar Cars provides a more internationally-focused, modern cars-based demonstration dataset. It mirrors many of the columns in mtcars, but uses (1) non-US-centric makes and models, (2) 2025 prices, and (3) metric measurements, making it more appropriate for use as an example dataset outside the United States. It includes almost exactly the same variables as the mtcars dataset:\n\n\norigin: The country associated with the car brand\n\nmake The brand of the car, such as Toyota or Land Rover\n\nmodel The specific type of car, such as Land Cruiser or Defender\n\nlength, width, and height: Length, width, and height of the car (in meters)\n\nseating: Number of seats in the car\n\ntrunk: Capacity or volume of the trunk (in liters)\n\neconomy: Fuel economy of the car (in liters per 100 km)\n\nhorsepower: Car horsepower\n\nprice: Price of the car in 2025 Qatari riyals\n\nmass: Mass of the car (in kg)\n\nperformance: Time to accelerate from 0 to 100 km/h (in seconds)\n\ntype: The type of the car, such as coupe, sedan, or SUV\n\nenginetype: The type of engine: electric, hybrid, or petrol\n\nThe original data was compiled by Paul Musgrave in January 2025 and is mostly sourced from YallaMotors Qatar. See Paul’s writeup of the background and purpose of the data.\nSee this article for a more detailed description of the rationale for and process of collecting the data:\n\nPaul Musgrave, “Defaulting to Inclusion: Producing Sample Datasets for the Global Data Science Classroom,” Journal of Political Science Education, 2025, 1–11, https://doi.org/10.1080/15512169.2025.2572320.",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Home"
    ]
  },
  {
    "objectID": "index.html#formats",
    "href": "index.html#formats",
    "title": "qatarcars",
    "section": "Formats",
    "text": "Formats\nThe Qatar Cars data is available in several different formats:\n\n\nThis {qatarcars} R package. See below for complete details. Load like this:\nlibrary(qatarcars)\nqatarcars\n\nPlain text CSV file. Use with any software.\n\nStata .dta file. Load like this:\nuse \"https://qatarcars.georgetown.domains/qatarcars.dta\"\nlist in 1/6\n\n\nR .rds file. Load like this:\ndf &lt;- readRDS(\"qatarcars.rds\")\nhead(df)\n\n\nThe QatarCars Python package. Install with pip install qatarcars, then load like this:\nfrom qatarcars import get_qatar_cars\ndf = get_qatar_cars(\"pandas\")  # or \"polars\"\ndf.head()",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Home"
    ]
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "qatarcars",
    "section": "Installation",
    "text": "Installation\nThe released version of {qatarcars} is available on CRAN:\ninstall.packages(\"qatarcars\")\nYou can also install the development version from GitHub:\n# install.packages(\"remotes\")\nremotes::install_github(\"profmusgrave/qatarcars\")",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Home"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "qatarcars",
    "section": "Usage",
    "text": "Usage\nLoad data\nSimilar to other data-only R packages like {gapminder} and {palmerpenguins}, load the data by running library(qatarcars):\n\nlibrary(qatarcars)\n\nqatarcars\n#&gt; # A tibble: 105 × 15\n#&gt;    origin  make     model   length width height seating trunk economy horsepower\n#&gt;    &lt;fct&gt;   &lt;fct&gt;    &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;\n#&gt;  1 Germany BMW      3 Seri…   4.71  1.83   1.44       5    59     7.6        386\n#&gt;  2 Germany BMW      X1        4.50  1.84   1.64       5   505     6.6        313\n#&gt;  3 Germany Audi     RS Q8     5.01  1.69   2.00       5   605    12.1        600\n#&gt;  4 Germany Audi     RS3       4.54  1.85   1.41       5   321     8.7        400\n#&gt;  5 Germany Audi     A3        4.46  1.96   1.42       5   425     6.5        180\n#&gt;  6 Germany Mercedes Maybach   5.47  1.92   1.51       4   500    13.3        612\n#&gt;  7 Germany Mercedes G-Wagon   4.61  1.98   1.97       5   480    13.1        585\n#&gt;  8 Germany Mercedes EQS       5.22  1.93   1.51       5   610    NA          333\n#&gt;  9 Germany Mercedes GLA       4.41  1.83   1.61       5   435     5.6        163\n#&gt; 10 Germany Mercedes GLB 200   4.63  4.63   1.66       5   565     7.5        221\n#&gt; # ℹ 95 more rows\n#&gt; # ℹ 5 more variables: price &lt;dbl&gt;, mass &lt;dbl&gt;, performance &lt;dbl&gt;, type &lt;fct&gt;,\n#&gt; #   enginetype &lt;fct&gt;\n\n\n\n\n\n\n\nTip\n\n\n\nIf you have {tibble} installed (likely as part of the tidyverse), qatarcars will load as a tibble with nicer printing output; if you do not have {tibble} installed, the data will load as a standard data frame.\n\n\nSee ?qatarcars for data documentation within R.\nCurrency conversions\nPrices are stored as Qatari Riyals (QAR). At the time of data collection in January 2025, the exchange rates between QAR and US Dollars and Euros were:\n\n1 USD = 3.64 QAR\n1 EUR = 4.15 QAR\n\nFor convenience, this package includes functions for converting between these three currencies based on January 2025 exchange rates:\n\nFrom QAR: qar_to_usd() and qar_to_eur()\n\nFrom USD: usd_to_qar() and usd_to_eur()\n\nFrom EUR: eur_to_qar() and eur_to_usd()\n\n\n\nlibrary(dplyr)\n\nqatarcars |&gt;\n  mutate(\n    price_eur = qar_to_eur(price),\n    price_usd = qar_to_usd(price)\n  ) |&gt;\n  select(origin, make, model, starts_with(\"price\"))\n#&gt; # A tibble: 105 × 6\n#&gt;    origin  make     model            price price_eur price_usd\n#&gt;    &lt;fct&gt;   &lt;fct&gt;    &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n#&gt;  1 Germany BMW      3 Series Sedan  164257    39580     45126.\n#&gt;  2 Germany BMW      X1              264000    63614.    72527.\n#&gt;  3 Germany Audi     RS Q8           630000   151807.   173077.\n#&gt;  4 Germany Audi     RS3             310000    74699.    85165.\n#&gt;  5 Germany Audi     A3              165000    39759.    45330.\n#&gt;  6 Germany Mercedes Maybach        1281000   308675.   351923.\n#&gt;  7 Germany Mercedes G-Wagon        1011500   243735.   277885.\n#&gt;  8 Germany Mercedes EQS             564500   136024.   155082.\n#&gt;  9 Germany Mercedes GLA             209500    50482.    57555.\n#&gt; 10 Germany Mercedes GLB 200         168997    40722.    46428.\n#&gt; # ℹ 95 more rows\n\nUnit conversions\nConversions between SI (International System) units (i.e. meters, grams, liters) and US customary units (i.e. feet, pounds, gallons) are not included as functions. This is a deliberate pedagogical choice. The data is designed to be universally inclusive with SI units used by the majority of the world. Users who work with US customary units should convert them on their own.\nSee the “Unit conversions” vignette for guidance and examples for making these different conversions, since not all of the variables involve straightforward multiplication.\nAnother benefit of not including built-in conversion functions like m_to_ft() is that this data can be used to teach learners how to write R functions:\n\nm_to_ft &lt;- function(meters) {\n  meters * (1 / 0.3048)\n}\n\nm_to_ft(100)\n#&gt; [1] 328.084\n\nColor\nThe official colors of the Qatari flag are white and Pantone 1955 C, or “Qatar maroon.” The hex representation of this color is ⁠#8A1538.⁠\nFor convenience, this is included as qatar_maroon:\n\nqatar_maroon\n#&gt; [1] \"#8A1538\"\n\nscales::show_col(qatar_maroon)\n\n\n\n\n\n\n\nLabels\nMost columns in qatarcars are labeled:\n\nattributes(qatarcars$economy)\n#&gt; $label\n#&gt; [1] \"Fuel Economy (L/100km)\"\n\nThese labels are visible in RStudio’s Viewer panel:\n\nIf you use {ggplot2} v4.0+, these variable labels will automatically appear in plot labels:\n\nlibrary(ggplot2)\n\nggplot(qatarcars, aes(x = economy)) + \n  geom_histogram(binwidth = 1, fill = qatar_maroon, color = \"white\")\n\n\n\n\n\n\n\nThe various conversion functions also update the labels:\n\nqatarcars |&gt; \n  mutate(price_eur = qar_to_eur(price)) |&gt; \n  ggplot(aes(x = price_eur)) +\n  geom_histogram(bins = 20, fill = qatar_maroon, color = \"white\")  +\n  scale_x_log10(labels = scales::label_currency(prefix = \"€\"))",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Home"
    ]
  },
  {
    "objectID": "index.html#examples",
    "href": "index.html#examples",
    "title": "qatarcars",
    "section": "Examples",
    "text": "Examples\nFuel efficiency gets worse as cars get heavier:\n\nggplot(qatarcars, aes(x = mass, y = economy)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_x_continuous(labels = scales::label_comma())\n\n\n\n\n\n\n\nThis is reversed when looking at miles per gallon. In SI units, low economy values are good; in US customary units, high economy values are good:\n\neconomy_conversion_factor &lt;- 100 *\n  3.785411784 / # liters in a gallon\n  (0.3048 * 5280 / 1000) # kilometers in a mile\n\nqatarcars |&gt; \n  mutate(\n    mass_lbs = mass / 0.45359237,\n    economy_mph = economy_conversion_factor / economy\n  ) |&gt; \n  ggplot(aes(x = mass_lbs, y = economy_mph)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_x_continuous(labels = scales::label_comma()) +\n  labs(x = \"Mass (lbs)\", y = \"Fuel Economy (mpg)\")\n\n\n\n\n\n\n\nSome of these cars are really expensive, so logging the price is helpful:\n\nggplot(qatarcars, aes(x = performance, y = price)) +\n  geom_smooth() +\n  geom_point(aes(color = type)) +\n  scale_y_log10(labels = scales::label_currency(prefix = \"QR \"))\n\n\n\n\n\n\n\nOr in dollars:\n\nqatarcars |&gt; \n  mutate(\n    price_usd = qar_to_usd(price),\n    performance_mph = performance * (0.3048 * 5280 * 60 / 1000 / 100)\n  ) |&gt;\n  ggplot(aes(x = performance_mph, y = price_usd)) +\n  geom_smooth() +\n  geom_point(aes(color = type)) +\n  scale_y_log10(labels = scales::label_currency(prefix = \"$\")) +\n  labs(x = \"Time 0-60 mph (s)\")",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Home"
    ]
  },
  {
    "objectID": "vignettes/README_research-data.html",
    "href": "vignettes/README_research-data.html",
    "title": "Research data README",
    "section": "",
    "text": "Note\n\n\n\nThis README file was generated on 2025-07-09 by Paul Musgrave. It was modified on 2025-10-03.",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Research data README"
    ]
  },
  {
    "objectID": "vignettes/README_research-data.html#author",
    "href": "vignettes/README_research-data.html#author",
    "title": "Research data README",
    "section": "Author",
    "text": "Author\nName: Paul Musgrave\nORCID: https://orcid.org/0000-0002-8984-4992\nInstitution: Georgetown University Qatar\nAddress: Education City, Doha, Qatar\nEmail: rpm47@georgetown.edu\n\nDate of data collection: January 2025, with additional data collected in July and August 2025.\nGeographic location of data collection: Doha, State of Qatar\nInformation about funding sources that supported the collection of the data: No funding",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Research data README"
    ]
  },
  {
    "objectID": "vignettes/README_research-data.html#file-list",
    "href": "vignettes/README_research-data.html#file-list",
    "title": "Research data README",
    "section": "File List:",
    "text": "File List:\n\nthis file\nqatarcars.dta\nqatarcars.csv\nRelationship between files, if important: Identical data, different formats.\nAdditional related data collected that was not included in the current data package: NA\nAre there multiple versions of the dataset? NA\n\nIf yes, name of file(s) that was updated: NA\nWhy was the file updated? NA\nWhen was the file updated? NA",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Research data README"
    ]
  },
  {
    "objectID": "vignettes/README_research-data.html#description-of-methods-used-for-collectiongeneration-of-data",
    "href": "vignettes/README_research-data.html#description-of-methods-used-for-collectiongeneration-of-data",
    "title": "Research data README",
    "section": "Description of methods used for collection/generation of data:",
    "text": "Description of methods used for collection/generation of data:\nThe data was collected as part of a statistics course for International Politics majors at Georgetown University. Data was gathered from online automobile Web sites and collected via Google Forms and spreadsheets. Students were assigned automobile manufacturers and told to collect one to three makes for each manufacturer. In addition to collecting much of the data, Musgrave edited the data and ensured consistency in formatting.",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Articles",
      "Research data README"
    ]
  },
  {
    "objectID": "man/currency_conversion.html",
    "href": "man/currency_conversion.html",
    "title": "qatarcars",
    "section": "",
    "text": "Functions to convert between Qatari Riyals (QAR), US Dollars (USD), and Euros (EUR) using exchange rates from the time of data collection in January 2025.\n\nqar_to_usd(qar)\n\nqar_to_eur(qar)\n\nusd_to_qar(usd)\n\nusd_to_eur(usd)\n\neur_to_qar(eur)\n\neur_to_usd(eur)\n\n\n\n\n\nqar\n\n\nnumeric vector of values in Qatari Riyals\n\n\n\n\nusd\n\n\nnumeric vector of values in US Dollars\n\n\n\n\neur\n\n\nnumeric vector of values in Euros\n\n\n\nExchange rates in January 2025:\n\n\n1 USD = 3.64 QAR\n\n\n1 EUR = 4.15 QAR\n\n\nNumeric vector of converted currency amounts\n\n\nlibrary(\"qatarcars\")\n\nqar_to_usd(100)\n\n[1] 27.47253\n\nusd_to_eur(50)\n\n[1] 43.85542\n\neur_to_qar(25)\n\n[1] 103.75\n\nqatarcars$price_eur &lt;- qar_to_eur(qatarcars$price)\nqatarcars$price_usd &lt;- qar_to_usd(qatarcars$price)\nqatarcars[, c(\"origin\", \"make\", \"model\", \"price\", \"price_eur\", \"price_usd\")]\n\n# A tibble: 105 × 6\n   origin  make     model            price price_eur price_usd\n   &lt;fct&gt;   &lt;fct&gt;    &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Germany BMW      3 Series Sedan  164257    39580     45126.\n 2 Germany BMW      X1              264000    63614.    72527.\n 3 Germany Audi     RS Q8           630000   151807.   173077.\n 4 Germany Audi     RS3             310000    74699.    85165.\n 5 Germany Audi     A3              165000    39759.    45330.\n 6 Germany Mercedes Maybach        1281000   308675.   351923.\n 7 Germany Mercedes G-Wagon        1011500   243735.   277885.\n 8 Germany Mercedes EQS             564500   136024.   155082.\n 9 Germany Mercedes GLA             209500    50482.    57555.\n10 Germany Mercedes GLB 200         168997    40722.    46428.\n# ℹ 95 more rows\n\n# Labels are updated automatically\nstr(qatarcars$price)\n\n num [1:105] 164257 264000 630000 310000 165000 ...\n - attr(*, \"label\")= chr \"Price (QAR)\"\n\nstr(qatarcars$price_eur)\n\n num [1:105] 39580 63614 151807 74699 39759 ...\n - attr(*, \"label\")= chr \"Price (EUR)\"\n\nstr(qatarcars$price_usd)\n\n num [1:105] 45126 72527 173077 85165 45330 ...\n - attr(*, \"label\")= chr \"Price (USD)\"\n\nif (require(\"dplyr\")) {\n  qatarcars |&gt; \n    mutate(\n      price_eur = qar_to_eur(price), \n      price_usd = qar_to_usd(price)\n    ) |&gt; \n    select(origin, make, model, starts_with(\"price\"))\n}\n\n# A tibble: 105 × 6\n   origin  make     model            price price_eur price_usd\n   &lt;fct&gt;   &lt;fct&gt;    &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Germany BMW      3 Series Sedan  164257    39580     45126.\n 2 Germany BMW      X1              264000    63614.    72527.\n 3 Germany Audi     RS Q8           630000   151807.   173077.\n 4 Germany Audi     RS3             310000    74699.    85165.\n 5 Germany Audi     A3              165000    39759.    45330.\n 6 Germany Mercedes Maybach        1281000   308675.   351923.\n 7 Germany Mercedes G-Wagon        1011500   243735.   277885.\n 8 Germany Mercedes EQS             564500   136024.   155082.\n 9 Germany Mercedes GLA             209500    50482.    57555.\n10 Germany Mercedes GLB 200         168997    40722.    46428.\n# ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Reference",
      "currency_conversion"
    ]
  },
  {
    "objectID": "man/currency_conversion.html#convert-between-qar-usd-and-eur",
    "href": "man/currency_conversion.html#convert-between-qar-usd-and-eur",
    "title": "qatarcars",
    "section": "",
    "text": "Functions to convert between Qatari Riyals (QAR), US Dollars (USD), and Euros (EUR) using exchange rates from the time of data collection in January 2025.\n\nqar_to_usd(qar)\n\nqar_to_eur(qar)\n\nusd_to_qar(usd)\n\nusd_to_eur(usd)\n\neur_to_qar(eur)\n\neur_to_usd(eur)\n\n\n\n\n\nqar\n\n\nnumeric vector of values in Qatari Riyals\n\n\n\n\nusd\n\n\nnumeric vector of values in US Dollars\n\n\n\n\neur\n\n\nnumeric vector of values in Euros\n\n\n\nExchange rates in January 2025:\n\n\n1 USD = 3.64 QAR\n\n\n1 EUR = 4.15 QAR\n\n\nNumeric vector of converted currency amounts\n\n\nlibrary(\"qatarcars\")\n\nqar_to_usd(100)\n\n[1] 27.47253\n\nusd_to_eur(50)\n\n[1] 43.85542\n\neur_to_qar(25)\n\n[1] 103.75\n\nqatarcars$price_eur &lt;- qar_to_eur(qatarcars$price)\nqatarcars$price_usd &lt;- qar_to_usd(qatarcars$price)\nqatarcars[, c(\"origin\", \"make\", \"model\", \"price\", \"price_eur\", \"price_usd\")]\n\n# A tibble: 105 × 6\n   origin  make     model            price price_eur price_usd\n   &lt;fct&gt;   &lt;fct&gt;    &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Germany BMW      3 Series Sedan  164257    39580     45126.\n 2 Germany BMW      X1              264000    63614.    72527.\n 3 Germany Audi     RS Q8           630000   151807.   173077.\n 4 Germany Audi     RS3             310000    74699.    85165.\n 5 Germany Audi     A3              165000    39759.    45330.\n 6 Germany Mercedes Maybach        1281000   308675.   351923.\n 7 Germany Mercedes G-Wagon        1011500   243735.   277885.\n 8 Germany Mercedes EQS             564500   136024.   155082.\n 9 Germany Mercedes GLA             209500    50482.    57555.\n10 Germany Mercedes GLB 200         168997    40722.    46428.\n# ℹ 95 more rows\n\n# Labels are updated automatically\nstr(qatarcars$price)\n\n num [1:105] 164257 264000 630000 310000 165000 ...\n - attr(*, \"label\")= chr \"Price (QAR)\"\n\nstr(qatarcars$price_eur)\n\n num [1:105] 39580 63614 151807 74699 39759 ...\n - attr(*, \"label\")= chr \"Price (EUR)\"\n\nstr(qatarcars$price_usd)\n\n num [1:105] 45126 72527 173077 85165 45330 ...\n - attr(*, \"label\")= chr \"Price (USD)\"\n\nif (require(\"dplyr\")) {\n  qatarcars |&gt; \n    mutate(\n      price_eur = qar_to_eur(price), \n      price_usd = qar_to_usd(price)\n    ) |&gt; \n    select(origin, make, model, starts_with(\"price\"))\n}\n\n# A tibble: 105 × 6\n   origin  make     model            price price_eur price_usd\n   &lt;fct&gt;   &lt;fct&gt;    &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 Germany BMW      3 Series Sedan  164257    39580     45126.\n 2 Germany BMW      X1              264000    63614.    72527.\n 3 Germany Audi     RS Q8           630000   151807.   173077.\n 4 Germany Audi     RS3             310000    74699.    85165.\n 5 Germany Audi     A3              165000    39759.    45330.\n 6 Germany Mercedes Maybach        1281000   308675.   351923.\n 7 Germany Mercedes G-Wagon        1011500   243735.   277885.\n 8 Germany Mercedes EQS             564500   136024.   155082.\n 9 Germany Mercedes GLA             209500    50482.    57555.\n10 Germany Mercedes GLB 200         168997    40722.    46428.\n# ℹ 95 more rows",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Reference",
      "currency_conversion"
    ]
  },
  {
    "objectID": "man/qatar_maroon.html",
    "href": "man/qatar_maroon.html",
    "title": "qatarcars",
    "section": "",
    "text": "The official colors of the Qatari flag are white and Pantone 1955 C, or \"Qatar maroon.\" The hex representation of this color is #8A1538.\n\nqatar_maroon\n\n\nA character string containing a hex color code.\n\nhttps://en.wikipedia.org/wiki/Flag_of_Qatar\n\n\nlibrary(\"qatarcars\")\n\nqatar_maroon\n\n[1] \"#8A1538\"\n\nhist(qatarcars$length, breaks = 15, col = qatar_maroon, border = \"white\")\n\n\n\n\n\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = length)) +\n    geom_histogram(bins = 15, fill = qatar_maroon, color = \"white\")\n}",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Reference",
      "qatar_maroon"
    ]
  },
  {
    "objectID": "man/qatar_maroon.html#qatar-maroon-color",
    "href": "man/qatar_maroon.html#qatar-maroon-color",
    "title": "qatarcars",
    "section": "",
    "text": "The official colors of the Qatari flag are white and Pantone 1955 C, or \"Qatar maroon.\" The hex representation of this color is #8A1538.\n\nqatar_maroon\n\n\nA character string containing a hex color code.\n\nhttps://en.wikipedia.org/wiki/Flag_of_Qatar\n\n\nlibrary(\"qatarcars\")\n\nqatar_maroon\n\n[1] \"#8A1538\"\n\nhist(qatarcars$length, breaks = 15, col = qatar_maroon, border = \"white\")\n\n\n\n\n\n\nif (require(\"ggplot2\")) {\n  ggplot(qatarcars, aes(x = length)) +\n    geom_histogram(bins = 15, fill = qatar_maroon, color = \"white\")\n}",
    "crumbs": [
      "{{< fa file-lines >}} Article",
      "Reference",
      "qatar_maroon"
    ]
  }
]